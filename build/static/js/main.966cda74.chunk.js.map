{"version":3,"sources":["components/AuthContainer.jsx","services/httpServices.js","pages/signup/register.service.js","pages/signup/components/RegisterForm.jsx","pages/signup/Register.jsx","pages/login/login.service.js","contexts/loaderContext.js","pages/login/components/LoginForm.jsx","pages/login/Login.jsx","pages/home/home.service.js","pages/contacts/contact.service.js","pages/contacts/add-contact/AddContactForm.jsx","components/Sidebar.jsx","pages/contacts/my-contacts/Contact.jsx","components/Filter.js","pages/contacts/my-contacts/Contacts.jsx","pages/contacts/my-contacts/MyContacts.jsx","pages/dashboard/components/favourites/Favourite.jsx","pages/dashboard/dashboard.service.js","pages/dashboard/components/favourites/Favourites.jsx","pages/dashboard/components/frequency-graph/frequency-graph.jsx","pages/dashboard/Dashboard.jsx","pages/profile/profile.jsx","pages/home/Home.jsx","services/authServices.js","pages/forgot_password/components/ForgotPasswordForm.jsx","pages/forgot_password/ForgotPassword.jsx","pages/reset_password/components/ResetPasswordForm.jsx","pages/reset_password/ResetPassword.jsx","App.js","index.js"],"names":["AuthContainer","children","className","baseURL","process","trim","getAuthHeader","token","localStorage","getItem","Authorization","service","getRequest","path","axios","get","headers","then","data","postRequest","body","post","putRequest","put","deleteRequest","delete","status","registerService","registerUser","username","password","mobileNumber","firstName","lastName","httpServices","RegisterForm","useForm","register","handleSubmit","errors","formState","onSubmit","console","log","htmlFor","required","type","name","id","to","Register","loginService","loginUser","onLoginSucess","setItem","LoadingContext","createContext","loading","setLoading","LoadingProvider","useState","value","override","css","Provider","active","spinner","color","useLoading","context","useContext","Error","LoginForm","history","useHistory","setTimeout","result","push","catch","error","toast","response","Login","homeService","getAllContacts","httpService","saveNewContact","deleteContact","getProfile","changePassword","contactService","getContactInfo","updateContact","_id","AddContactForm","useParams","reset","show","message","setResponse","update","setUpdate","savedContact","addNewContact","useEffect","resp","number","hidden","Sidebar","url","useRouteMatch","activeClassName","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","removeItem","Contact","contact","makeFavourite","favourite","Filter","list","setList","filter","setFilter","placeholder","onChange","e","text","filteredList","item","toLowerCase","includes","filterList","target","label","key","Contacts","contactsToShow","contacts","setContacts","map","Swal","require","MyContacts","a","fire","icon","title","showCancelButton","confirmButtonText","confirmButtonColor","isConfirmed","contactList","Favourite","fillRule","clipRule","dashboardService","getFavouriteContacts","getGraphData","Favourities","favourites","setFavourites","length","style","flex","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","FrequencyGraph","datasets","setDatasets","labels","setLabels","payload","startDate","moment","subtract","format","stopDate","el","count","borderColor","backgroundColor","options","responsive","scales","y","ticks","stepSize","beginAtZero","grid","display","x","Dashboard","Profile","user","profilePicture","watch","getValues","userDetails","setUser","isPasswordFormVisible","showPasswordForm","crop","setCrop","useRef","current","newPassword","confirmPassword","onCropComplete","width","height","src","alt","event","image","files","aspect","onCropChange","validate","matchesPreviousPassword","passwordForm","Home","exact","authServices","forgotPassword","ForgotPasswordForm","success","ForgotPassowrd","ResetPasswordForm","ResetPassword","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.966cda74.chunk.js","sourcesContent":["const AuthContainer = ({children}) => {\r\n    return (\r\n        <div className='flex h-screen'>\r\n            <div className='flex items-center justify-center p-5 custom-bg w-full'>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthContainer;\r\n","import axios from 'axios';\r\nlet baseURL = '/api'\r\n\r\nconst { REACT_APP_ENVTYPE } = process.env;\r\n\r\nif (REACT_APP_ENVTYPE.trim() === 'dev') {\r\n    baseURL = 'http://localhost:2000/api'\r\n}\r\n\r\nconst getAuthHeader = () => {\r\n    const token = localStorage.getItem('phonebook_token') || null;\r\n    return { Authorization: `Bearer ${token}` };\r\n}\r\n\r\nconst getRequest = (path) => {\r\n    const request = axios.get(`${baseURL}${path}`, { headers: getAuthHeader() });\r\n    return request.then(({data}) => data);\r\n}\r\n\r\nconst postRequest = (path, body) => {\r\n    const request  = axios.post(`${baseURL}${path}`, body, { headers: getAuthHeader() });\r\n    return request.then(({data}) => data);\r\n}\r\n\r\nconst putRequest = (path, body) => {\r\n    const request = axios.put(`${baseURL}${path}`, body, { headers: getAuthHeader() });\r\n    return request.then(({data}) => data);\r\n}\r\n\r\nconst deleteRequest = (path) => {\r\n    const request = axios.delete(`${baseURL}${path}`, { headers: getAuthHeader() });\r\n    return request.then(({status}) => status);\r\n}\r\n\r\nconst service = { getRequest, postRequest, putRequest, deleteRequest }\r\n\r\nexport default service;","import httpServices from '../../services/httpServices';\r\n\r\nconst registerUser = ({username, password, mobileNumber, firstName, lastName}) => {\r\n    return httpServices.postRequest('/users/register', {username, password, mobileNumber, firstName, lastName});\r\n}\r\n\r\nconst registerService = { registerUser };\r\n\r\nexport default registerService;\r\n","import registerService from '../register.service';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RegisterForm = () => {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const onSubmit = data => {\r\n        console.log(data);\r\n        registerService.registerUser(data)\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className='flex flex-col space-y-4 custom-box-shadow p-10 w-full md:w-3/4 lg:w-1/3 rounded-lg bg-white'>\r\n            <h2 className='text-xl'>Register to phonebook</h2>\r\n            <div className='flex'>\r\n                <div className='w-1/2 mr-2'>\r\n                    <label className='block mb-2' htmlFor=\"firstName\">Firstname</label>\r\n                    <input {...register('firstName', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"text\" />\r\n                    { errors.firstName && <span className=\"text-red-500 text-sm\">First name is required</span> }\r\n                </div>\r\n                <div className='w-1/2'>\r\n                    <label className='block mb-2' htmlFor=\"lastName\">Lastname</label>\r\n                    <input {...register('lastName', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"text\" />\r\n                    { errors.lastName && <span className=\"text-red-500 text-sm\">Last Name is required</span> }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label className='block mb-2' htmlFor=\"email\">Email</label>\r\n                <input {...register('username', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"email\" />\r\n                { errors.username && <span className=\"text-red-500 text-sm\">Email is required</span> }\r\n            </div>\r\n            <div>\r\n                <label className='block mb-2' htmlFor=\"mobileNumber\">Mobile Number</label>\r\n                <input {...register('mobileNumber', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"number\" name=\"mobileNumber\" id=\"mobileNumber\" />\r\n                { errors.mobileNumber && <span className=\"text-red-500 text-sm\">Mobile Number is required</span> }\r\n            </div>\r\n            <div>\r\n                <label className='block mb-2' htmlFor=\"password\">Password</label>\r\n                <input {...register('password', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"password\" name=\"password\" id=\"password\" />\r\n                { errors.password && <span className=\"text-red-500 text-sm\">Password is required</span> }\r\n            </div>\r\n            <button type='submit' className='w-full bg-green-500 hover:bg-green-600 text-white px-8 py-2 rounded-lg'>Register</button>\r\n            <p>Already have an account? <Link className='text-green-500 hover:text-green-600 underline' to='/login'>Login</Link></p>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;\r\n","\r\nimport AuthContainer from \"../../components/AuthContainer\";\r\nimport RegisterForm from \"./components/RegisterForm\";\r\n\r\nconst Register = () => {\r\n    return (\r\n        <AuthContainer>\r\n            <RegisterForm></RegisterForm>\r\n        </AuthContainer>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","import httpServices from '../../services/httpServices';\r\n\r\nconst loginUser = ({username, password}) => {\r\n    return httpServices.postRequest('/users/login', {username, password});\r\n}\r\n\r\nconst onLoginSucess = (token) => {\r\n    localStorage.setItem('phonebook_token', token);\r\n}\r\n\r\nconst loginService = { loginUser, onLoginSucess };\r\n\r\nexport default loginService;\r\n","import { createContext, useState, useContext, useEffect } from 'react';\r\nimport {ScaleLoader, BarLoader, PuffLoader} from 'react-spinners';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { css } from \"@emotion/react\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\n\r\nconst LoadingContext = createContext({\r\n    loading: false,\r\n    setLoading: null\r\n});\r\n\r\nexport function LoadingProvider({children}) {\r\n    const [loading, setLoading] = useState(false);\r\n    const value = { loading, setLoading };\r\n    const override = css`\r\n    display: block;\r\n    margin: auto;\r\n    border-color: red;\r\n    `;\r\n    return <LoadingContext.Provider value={value}>\r\n            <LoadingOverlay active={loading} spinner={<PuffLoader css={override} color={'#28ffb8'} />}>\r\n                    {children}\r\n            </LoadingOverlay>\r\n           </LoadingContext.Provider>\r\n}\r\n\r\n\r\nexport function useLoading() {\r\n    const context = useContext(LoadingContext);\r\n    if (!context) {\r\n        throw new Error('useLoading must be used with Loading Provider');\r\n    }\r\n    return context;\r\n}\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport loginService from \"../login.service\";\r\nimport { useLoading } from '../../../contexts/loaderContext';\r\nimport { toast } from \"react-toastify\";\r\nconst LoginForm = () => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const { setLoading } =  useLoading();\r\n    const onSubmit = data => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            loginService.loginUser(data)\r\n            .then(({result: {token}}) => {\r\n                setLoading(false);\r\n                token && loginService.onLoginSucess(token);\r\n                history.push('/home');\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                toast.error(error?.response?.data?.error || \"Something went wrong\")\r\n            });\r\n        }, 3000)\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className='flex flex-col space-y-4 custom-box-shadow p-8 md:p-10 w-full md:w-3/4 lg:w-1/3 rounded-lg bg-white'>\r\n            <h2 className='text-xl'>Login to phonebook</h2>\r\n            <div className='flex flex-col'>\r\n                <label className='block mb-2' htmlFor=\"email\">Email</label>\r\n                <input {...register('username', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"email\" name=\"username\" />\r\n                { errors.username && <span className='text-red-500 text-sm'>Email is Required</span>}\r\n            </div>\r\n            <div>\r\n                <label className='block mb-2' htmlFor=\"password\">Password</label>\r\n                <input {...register('password', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"password\" name=\"password\" id=\"password\" />\r\n                { errors.password && <span className='text-red-500 text-sm'>Password is Required</span>}\r\n            </div>\r\n            <button type='submit' className='w-full bg-green-500 hover:bg-green-600 text-white px-8 py-2 rounded-lg'>Login</button>\r\n            <Link to='/forgot-password' className=\"text-green-500 hover:text-green-600 underline\">Forgot Password?</Link>\r\n            <p>Already have an account? <Link className='text-green-500 hover:text-green-600 underline' to='/register'>Register</Link></p>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import LoginForm from \"./components/LoginForm\";\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className='flex h-screen'>\r\n            <div className='flex items-center justify-center p-5 custom-bg w-full'>\r\n                <LoginForm></LoginForm>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import httpService from '../../services/httpServices';\r\n\r\nconst getAllContacts = () => {\r\n    return httpService.getRequest('/contacts');\r\n}\r\n\r\nconst saveNewContact = (data) => {\r\n    return httpService.postRequest('/contacts', data);\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    return httpService.deleteRequest(`/contacts/${id}`);\r\n}\r\n\r\nconst getProfile = () => {\r\n    return httpService.getRequest('/users/profile');\r\n}\r\n\r\nconst changePassword = (data) => {\r\n    return httpService.putRequest('/users/changePassword', data);\r\n}\r\n\r\nconst homeService = {\r\n    getAllContacts,\r\n    saveNewContact,\r\n    deleteContact,\r\n    getProfile,\r\n    changePassword\r\n}\r\n\r\nexport default homeService;\r\n","import httpService from '../../services/httpServices';\r\n\r\nconst getContactInfo = (id) => {\r\n    return httpService.getRequest(`/contacts/${id}`);\r\n}\r\n\r\nconst updateContact = (data) => {\r\n    return httpService.putRequest(`/contacts/${data._id}`, data);\r\n}\r\n\r\nconst contactService = {\r\n    getContactInfo,\r\n    updateContact,\r\n}\r\n\r\nexport default contactService;","import { useForm } from \"react-hook-form\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport homeService from \"../../home/home.service\";\r\nimport contactService from \"../contact.service\";\r\n\r\nconst AddContactForm = () => {\r\n    let { id } = useParams();\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm();\r\n    const [ response, setResponse ] = useState({show: false, error: false, message: ''});\r\n    const [ update, setUpdate ] = useState(false);\r\n    const onSubmit = (data) => {\r\n      if (update) {\r\n        updateContact(data);\r\n      } else {\r\n        addNewContact(data);\r\n      }\r\n    };\r\n\r\n    const updateContact = (data) => {\r\n      contactService.updateContact({...data, _id: id})\r\n      .then(savedContact => {\r\n        console.log(savedContact);\r\n        setResponse({show: true, error: false, message: 'Contact Updated Successfully'});\r\n        setTimeout(() => setResponse({show: false, error: false, message: ''}), 2000)\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data.error);\r\n        setResponse({show: false, error: true, message: error?.response?.data?.error || 'Error'});\r\n        setTimeout(() => setResponse({show: false, error: false, message: ''}), 2000)\r\n      });\r\n    };\r\n\r\n    const addNewContact = (data) => {\r\n      homeService.saveNewContact(data)\r\n        .then(savedContact => {\r\n            console.log(savedContact);\r\n            setResponse({show: true, error: false, message: 'Contact Added Successfully'});\r\n            setTimeout(() => setResponse({show: false, error: false, message: ''}), 2000)\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response.data.error);\r\n            setResponse({show: false, error: true, message: error?.response?.data?.error || 'Error'});\r\n            setTimeout(() => setResponse({show: false, error: false, message: ''}), 2000)\r\n        });\r\n    }\r\n\r\n    const loadContactInfo = () => {\r\n      if (id) {\r\n        contactService.getContactInfo(id)\r\n        .then((resp) => {\r\n          setUpdate(true);\r\n          reset({\r\n            name: resp.result.name,\r\n            number: resp.result.number\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      }\r\n    }\r\n\r\n    useEffect(loadContactInfo, [id, reset]);\r\n\r\n    return (\r\n      <div className='w-1/2 p-4'>\r\n        <div className='custom-box-shadow p-5 rounded-lg'>\r\n\r\n        <form className='flex flex-col space-y-4' onSubmit={handleSubmit(onSubmit)}>\r\n          <h2 className='text-lg font-medium'>{ update ? 'Update' : 'Add new' } contact</h2>\r\n          <p className='text-red-500' hidden={!response.error}>Error: {response.message}</p>\r\n          <p className='text-green-500' hidden={!response.show}>{response.message}</p>\r\n          <div>\r\n            <label htmlFor='name' className='block mb-2'>Name</label>\r\n            <input\r\n              id=\"name\"\r\n              className='w-full border border-gray-300 rounded-lg'\r\n              type='text'\r\n              {...register('name', { required: true })} />\r\n              { errors.name && <span className='text-red-500 mt-1'>Name is required</span> }\r\n          </div>\r\n          <div>\r\n            <label htmlFor='number' className='block mb-2'>Contact number</label>\r\n            <input \r\n              id=\"number\"\r\n              className='w-full border border-gray-300 rounded-lg'\r\n              type='number'\r\n              {...register('number', { required: true })} />\r\n              { errors.name && <span className='text-red-500 mt-1'>Name is required</span> }\r\n          </div>\r\n          <button className='bg-green-500 hover:bg-green-600 text-white px-8 py-2 rounded-lg' type='submit'>{ update ? 'Update' : 'Add'}</button>\r\n        </form>\r\n      </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default AddContactForm;\r\n","import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    const history = useHistory();\r\n    let { url } = useRouteMatch();\r\n    function logout() {\r\n        localStorage.removeItem('phonebook_token');\r\n        history.push('/');\r\n    }\r\n    return (\r\n        <div className='min-h-screen flex flex-col justify-between w-full bg-green-200 opacity-95 rounded-2xl'>\r\n            <div>\r\n                <Link activeClassName='bg-green-700' to='/home/dashboard'><p className='text-3xl p-4 mb-4'>phonebook</p></Link>\r\n                <Link to='/home/dashboard'>\r\n                    <div className='text-lg pb-6 pl-4 pr-8 flex items-center'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\r\n                        </svg>\r\n                        <span>Dashboard</span>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-auto h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                        </svg>\r\n                    </div>\r\n                </Link>\r\n                <Link to={`${url}/my-contacts`} >\r\n                    <div className='text-lg pb-6 pl-4 pr-8 flex items-center'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                        </svg>\r\n                        <span>My Contacts</span>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-auto h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                        </svg>\r\n                    </div>\r\n                </Link>\r\n                <Link to={`${url}/my-profile`} >\r\n                    <div className='text-lg pl-4 pr-8 flex items-center'>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                        </svg>\r\n                        <span>My Profile</span>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-auto h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                        </svg>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n            <div className='text-lg mx-auto flex items-center mb-4'>\r\n                <span className=\"bg-white px-8 py-2 rounded-full inline-flex items-center\" onClick={()=>logout()}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\r\n                    </svg>\r\n                    <span>Logout</span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Contact = ({ contact, deleteContact, makeFavourite }) => {\r\n    return (\r\n        <div className='border border-gray-300 rounded-lg px-4 py-2 flex items-center'>\r\n            <div className='mr-4 flex flex-col'>\r\n                <p className='text-medium'>{contact.name} </p>\r\n                <p className=''>{contact.number}</p>\r\n            </div>\r\n            <button className='px-8 py-2 ml-auto mr-2 border rounded-lg inline-flex'>\r\n                {\r\n                    contact.favourite\r\n                        ? (\r\n                            <span className='inline-flex' onClick={() => makeFavourite(contact._id, false)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-yellow-300\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                    <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                                </svg>\r\n                            </span>)\r\n                        : (\r\n                            <span className='inline-flex' onClick={() => makeFavourite(contact._id, true)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-yellow-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\r\n                        </svg>\r\n                            </span>\r\n                        )\r\n                }\r\n            </button>\r\n            <Link to={`/home/edit-contact/${contact._id}`} className='border rounded-lg px-8 py-2 mr-2'>Edit</Link>\r\n            <button className='px-8 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white' onClick={() => { deleteContact(contact) }}>Delete</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Contact;\r\n","import { useState } from \"react\";\r\n\r\nconst Filter = ({list, setList}) => {\r\n  const [filter, setFilter] = useState('');\r\n  const filterList = (text) => {\r\n    setFilter(text);\r\n    const filteredList = text ? list.filter((item) => item.name.toLowerCase().includes(filter.toLowerCase())) : list;\r\n    console.log(filteredList)\r\n    setList(filteredList);\r\n  }\r\n    return (\r\n        <input \r\n          id='filter-name'\r\n          className='border-gray-300 border rounded-lg p-2 w-full'\r\n          placeholder='Search as you type'\r\n          type='text'\r\n          value = {filter}\r\n          onChange = {(e) => filterList(e.target.value)}  />\r\n    )\r\n}\r\n\r\nexport default Filter;","import Contact from \"./Contact\";\r\nimport Filter from '../../../components/Filter';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst headers = [\r\n  { label: \"Name\", key: \"name\" },\r\n  { label: \"Number\", key: \"number\" }\r\n];\r\n\r\nconst Contacts = ({contactsToShow, deleteContact, makeFavourite}) => {\r\n    const [contacts, setContacts] = useState([]);\r\n    useEffect(() => {\r\n      setContacts([...contactsToShow]);\r\n    }, [contactsToShow])\r\n    return (\r\n      <div className='w-full custom-box-shadow rounded-lg p-5 space-y-4'>\r\n        <div className='flex items-center'>\r\n          <h2 className='text-lg font-semibold'>Contacts</h2>\r\n          <CSVLink data={contacts} className=\"bg-green-500 text-white px-8 py-2 rounded-lg ml-auto mr-2\" headers={headers}>Export CSV</CSVLink>\r\n          <Link to='/home/add-new-contact' className='bg-green-500 hover:bg-green-600 text-white px-8 py-2 rounded-lg'>Add New Contact</Link>\r\n        </div>\r\n        <Filter list={contactsToShow} setList = {setContacts} />\r\n        { \r\n          contacts.map((contact) => (\r\n            <Contact key = { contact._id } contact = { contact } deleteContact = { deleteContact } makeFavourite = { makeFavourite } />\r\n          ))\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import Contacts from \"./Contacts\"\r\nimport { useEffect, useState } from \"react\";\r\nimport homeService from \"../../home/home.service\";\r\nimport contactService from \"../contact.service\";\r\nimport { useLoading } from '../../../contexts/loaderContext'\r\nconst Swal = require('sweetalert2')\r\n\r\nconst MyContacts = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const { setLoading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    homeService.getAllContacts()\r\n    .then(({ result }) => { setLoading(false); setContacts([...result]) })\r\n    .catch((error) => {\r\n        console.log(error.response.data.error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const deleteContact = async (contact) => {\r\n    const deleteConfirm = await Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Delete Contact',\r\n      text: 'Are you sure?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Delete',\r\n      confirmButtonColor: '#ef4444'\r\n    });\r\n    if (deleteConfirm.isConfirmed) {\r\n      try {\r\n        setLoading(true);\r\n        const status = await homeService.deleteContact(contact._id);\r\n        setLoading(false);\r\n        if (status) {\r\n          const contactList = contacts.filter(({ _id }) => _id !== contact._id);\r\n          setContacts([...contactList]);\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.log(error.response.data.error); \r\n      }\r\n    }\r\n  };\r\n  \r\n  const makeFavourite = (id, favourite) => {\r\n    setLoading(true)\r\n    console.log(favourite);\r\n    contactService.updateContact({ _id: id, favourite })\r\n    .then(() => {\r\n        setLoading(false)\r\n        const contactList = contacts.map((contact) => {\r\n          if (contact._id === id) {\r\n            return { ...contact, favourite };\r\n          }\r\n          return contact;\r\n        });\r\n        setContacts([...contactList]);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false)\r\n      })\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n      <Contacts contactsToShow={contacts} deleteContact={deleteContact} makeFavourite={makeFavourite}></Contacts>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MyContacts;\r\n","const Favourite = ({favourite}) => {\r\n    console.log(favourite);\r\n    return (\r\n        <>\r\n            <div className='p-3 flex bg-white rounded-2xl text-black'>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-10 w-10 text-green-600 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                <div className='flex flex-col'>\r\n                    <div>{favourite.name}</div>\r\n                    <div>{favourite.number}</div>\r\n                    <div>View</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Favourite;","import httpService from '../../services/httpServices';\r\n\r\nconst getFavouriteContacts = (id) => {\r\n    return httpService.getRequest(`/contacts/favourites`);\r\n}\r\n\r\nconst getGraphData = (data) => {\r\n    return httpService.postRequest('/contacts/graphData', data);\r\n}\r\n\r\nconst dashboardService = {\r\n    getFavouriteContacts,\r\n    getGraphData,\r\n}\r\n\r\nexport default dashboardService;","import { useEffect, useState } from \"react\";\r\nimport Favourite from \"./Favourite\";\r\nimport dashboardService from \"../../dashboard.service\";\r\nimport { useLoading } from '../../../../contexts/loaderContext';\r\n\r\nconst Favourities = () => {\r\n    const [favourites, setFavourites] = useState([]);\r\n    const { setLoading } = useLoading();\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        dashboardService.getFavouriteContacts()\r\n        .then((resp) => {\r\n            setLoading(false)\r\n            console.log(resp.result);\r\n            setFavourites([...resp.result]);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(false)\r\n            console.log(error);\r\n        });\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className='p-8 rounded-2xl bg-green-200 bg-opacity-90 shadow-xl'>\r\n                <div className='flex mb-3'>\r\n                    <span className='text-lg'>Favourite Contacts</span>\r\n                    {\r\n                        favourites.length > 0\r\n                        ? (<span className='text-lg ml-auto'>{favourites.length} { favourites.length === 1 ? 'Contact' : 'Contacts' }</span>)\r\n                        : ''\r\n                    }\r\n                </div>\r\n                <div className='flex flex-wrap -m-4'>\r\n                    {\r\n                        favourites.length > 0 \r\n                        ? favourites.map((favourite) => (\r\n                            <div className='m-4' style={{ flex: '0 0 45%' }} key={favourite._id}>\r\n                                <Favourite favourite = { favourite } />\r\n                            </div>\r\n                          ))\r\n                        : (\r\n                            <span className='m-4'>No Favourites yet!</span>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Favourities;","import { useState, useEffect } from 'react';\r\nimport dashboardService from '../../dashboard.service';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n  } from \"chart.js\";\r\nimport moment from 'moment';\r\n\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n  );\r\n\r\nconst FrequencyGraph = () => {\r\n    const [datasets, setDatasets] = useState([]);\r\n    const [labels, setLabels] = useState([]);\r\n    const payload = {\r\n        startDate: moment().subtract(7, 'days').format('YYYY-MM-DD'),\r\n        stopDate: moment().format('YYYY-MM-DD'),\r\n    }\r\n    useEffect(() => {\r\n        dashboardService.getGraphData(payload)\r\n        .then((resp) => {\r\n            setLabels(resp?.result?.map(el => el._id));\r\n            setDatasets([{data: resp?.result?.map(el => el.count), borderColor: 'rgb(0, 0, 0)',}]);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }, [])\r\n\r\n    const data = {\r\n        labels,\r\n        datasets,\r\n        borderColor: 'rgb(53, 162, 235)',\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)'\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        scales: {\r\n            y: {\r\n                ticks: {\r\n                  color: \"black\",\r\n                  stepSize: 1,\r\n                  beginAtZero: true,\r\n                },\r\n                grid: {\r\n                    color: 'black'\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'No. of contacts',\r\n                    color: 'black'\r\n                  }\r\n            },\r\n            x: {\r\n                ticks: {\r\n                  color: \"black\",\r\n                  stepSize: 1,\r\n                  beginAtZero: true\r\n                },\r\n                grid: {\r\n                    color: 'black'\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Dates',\r\n                    color: 'black'\r\n                  }\r\n            },\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className='p-8 rounded-2xl bg-green-200 bg-opacity-90 my-4 shadow-xl'>\r\n                <h2 className='text-lg mb-4'>Frequency Graph</h2>\r\n                <Line options={options} data={data} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FrequencyGraph;\r\n","import Favourities from \"./components/favourites/Favourites\";\r\nimport FrequencyGraph from \"./components/frequency-graph/frequency-graph\";\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <>\r\n            <div className='flex p-4'>\r\n                <div className='w-2/3'>\r\n                    <Favourities/>\r\n                    <FrequencyGraph />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport homeService from \"../home/home.service\";\r\nimport { useLoading } from '../../contexts/loaderContext'\r\nimport { useForm } from \"react-hook-form\";\r\nimport Cropper from \"react-easy-crop\";\r\n\r\nconst Profile = () => {\r\n    let user ={\r\n    firstName: '',\r\n    lastName: '',\r\n    username: '',\r\n    profilePicture: '',\r\n    mobileNumber: ''\r\n    }\r\n    const {register, handleSubmit, formState : { errors }, watch, getValues ,reset} = useForm();\r\n    const [userDetails, setUser] = useState(user);\r\n    const [isPasswordFormVisible, showPasswordForm] = useState(false);\r\n    const [crop, setCrop] = useState({x:0, y:0});\r\n    const { setLoading } = useLoading();\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n    \r\n    useEffect(async() => {\r\n        setLoading(true);\r\n        try{\r\n            const {result} = await homeService.getProfile();\r\n            if(result){\r\n                user = (({\r\n                        firstName,\r\n                        lastName,\r\n                        username,\r\n                        mobileNumber\r\n                        })=>({\r\n                        firstName,\r\n                        lastName,\r\n                        username,\r\n                        mobileNumber\r\n                        }))(result)\r\n                setUser(user);\r\n                setLoading(false)\r\n            }\r\n        }\r\n        catch(error){\r\n            setLoading(false);\r\n            console.log(error);\r\n        }\r\n        \r\n    },[])\r\n\r\n    const changePassword = async (data) => {\r\n        try{\r\n\r\n            const user = await homeService.changePassword(data);\r\n            console.log(user, 'Password updated');\r\n            reset({password:'',newPassword:'', confirmPassword:''});\r\n            showPasswordForm(false)\r\n        }\r\n        catch (error){\r\n            console.log(\"error\" , error);\r\n        }\r\n    }\r\n\r\n    const onCropComplete = ((croppedArea, croppedAreaPixels) => {\r\n        console.log(croppedArea, croppedAreaPixels)\r\n      }, []);\r\n    const showCropper = (event) => {\r\n        console.log(event.target);\r\n          return (\r\n            <Cropper\r\n              image={event.target.files[0]}\r\n              crop={crop}\r\n              aspect={4 / 3}\r\n              onCropChange={setCrop}\r\n              onCropComplete={onCropComplete}\r\n            />\r\n          )\r\n    }\r\n\r\n    const passwordForm = () => {\r\n        if(isPasswordFormVisible){\r\n           return (\r\n               <div className=\"w-full  p-2 space-y-4\">\r\n                   <p className=\"text-xl\">Change Password</p>\r\n                   <form onSubmit={handleSubmit(changePassword)} className=\"flex flex-col space-y-3\" >\r\n                       <label className=\"w-1/4 flex flex-col space-y-2\" >\r\n                           Current Password\r\n                           <input {...register('password', {required: true})} className=\"ms-4 rounded  border-1\" type=\"password\" placeholder=\"Enter Current Password\" />\r\n                           { errors.password && <span className='text-red-500 text-sm'>Current Password is required</span>}\r\n                       </label>\r\n                       <label className=\"w-1/4 flex flex-col space-y-2\" >\r\n                           New Password\r\n                           <input {...register('newPassword', {required: true})} className=\"ms-4 rounded  border-1\" type=\"password\" placeholder=\"Enter New Password\" />\r\n                           { errors.newPassword && <span className='text-red-500 text-sm'>New Password is Required</span>}\r\n                       </label>\r\n                       <label className=\"w-1/4 flex flex-col space-y-2\" >\r\n                           Confirm New Password\r\n                           <input {...register('confirmPassword',{required:\"Confirm Password is required\" ,validate: {\r\n                               matchesPreviousPassword: (value) => {\r\n                                   const { newPassword } = getValues();\r\n                                   return newPassword === value || \"Password does not match\"\r\n                                }\r\n                            } })} className=\"ms-4 rounded  border-1\" type=\"password\" placeholder=\"Confirm New Password\" />\r\n                             <span className='text-red-500 text-sm'> {errors?.confirmPassword?.message} </span> \r\n\r\n                       </label>\r\n                       <button type=\"submit\" className='w-1/5 bg-green-500 hover:bg-green-600 text-white px-4 py-1 my-1 rounded-lg'  >Update password</button>\r\n                   </form>\r\n               </div>\r\n           )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full custom-box-shadow rounded-lg p-5 space-y-4\" >\r\n            <h3 className=\"text-3xl\" >My Profile</h3>\r\n            <div className=\"mt-4 border-b\" ></div>\r\n            <div className=\"mt-4 flex\">\r\n                <div className=\"w-1/6\">\r\n                    <div className=\"border rounded-xl p-2 flex flex-col items-center\">\r\n                        <img width={150} height={150} className=\" border-none\" src={userDetails.profilePicture} alt=\"\" />\r\n                        <input onChange={(e)=>showCropper(e)} className=\"w-full opacity-0 h-8 mt-4\"  type=\"file\" />\r\n                        <button type=\"submit\" className='bg-green-500 hover:bg-green-600 text-white px-4 py-1 mb-1 -mt-8 rounded-lg'> Upload Image</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-3/4 p-2\">\r\n                    <div className=\"w-full space-y-4\">\r\n                        <div className=\"flex justify-between\">\r\n                        <h5 className=\"text-xl font-bold\">{`${userDetails.firstName} ${userDetails.lastName}`}</h5>\r\n                        {\r\n                            !isPasswordFormVisible?\r\n                        <button onClick={()=>showPasswordForm(true)} className='bg-green-500 hover:bg-green-600 text-white px-4 py-1 my-1 rounded-lg'>Change Password</button>\r\n                        : ''\r\n                        }\r\n                        </div>\r\n                        <p>{userDetails.username}</p>\r\n                        <p>{userDetails.mobileNumber}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                {\r\n                 passwordForm()\r\n                }\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import AddContactForm from '../contacts/add-contact/AddContactForm';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { Route, useRouteMatch } from 'react-router-dom';\r\nimport MyContacts from '../contacts/my-contacts/MyContacts';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport Profile from \"../profile/profile\";\r\n\r\nconst Home = () => {\r\n  let { path } = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <div className='flex max-h-screen'>\r\n        <div className='w-1/5'>\r\n          <Sidebar />\r\n        </div>\r\n        <div className='w-4/5 flex-1 max-h-screen overflow-y-auto '>\r\n            <Route exact path={`${path}`}><Dashboard /></Route>\r\n            <Route exact path={`${path}/my-profile`} ><Profile/></Route>\r\n            <Route exact path={`${path}/dashboard`}><Dashboard /></Route>\r\n            <Route exact path={`${path}/my-contacts`}><MyContacts /></Route>\r\n            <Route exact path={`${path}/add-new-contact`}><AddContactForm /></Route>\r\n            <Route exact path={`${path}/edit-contact/:id`}><AddContactForm /></Route>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import httpServices from './httpServices';\r\n\r\nconst forgotPassword = (data) => {\r\n    return httpServices.postRequest('/users/forgot-password', data);\r\n}\r\n\r\nconst authServices = {\r\n    forgotPassword\r\n}\r\n\r\nexport default authServices;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport authServices from '../../../services/authServices';\r\nimport { useLoading } from '../../../contexts/loaderContext';\r\n\r\nconst ForgotPasswordForm = () => {\r\n\r\n    const { handleSubmit, register, formState: { errors }, reset } = useForm();\r\n    const { setLoading } =  useLoading();\r\n    const onSubmit = data => {\r\n        setLoading(true);\r\n        authServices.forgotPassword(data)\r\n        .then((resp) => {\r\n            setLoading(false);\r\n            toast.success(resp.result.message);\r\n            reset();\r\n        })\r\n        .catch((error) => {\r\n            setLoading(false);\r\n            toast.error(error?.error?.message || 'Internal server error');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col space-y-4 custom-box-shadow p-8 md:p-10 w-full md:w-3/4 lg:w-1/3 rounded-lg bg-white\">\r\n            <h2 className='text-xl'>Forgot Password</h2>\r\n            <p className=\"text-gray-500\">A password reset link will be shared on account's email, please enter your email</p>\r\n            <div className='flex flex-col'>\r\n                <label className='block mb-2' htmlFor=\"email\">Email</label>\r\n                <input {...register('username', { required: 'Email is required' })} className='w-full border border-gray-300 rounded-lg' type=\"email\" name=\"username\" />\r\n                { errors.username && <span className='text-red-500 text-sm'>Email is Required</span>}\r\n            </div>\r\n            <button type=\"submit\" className=\"w-full bg-green-500 hover:bg-green-600 text-white px-8 py-2 rounded-lg\">Send reset link</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordForm;\r\n ","import AuthContainer from \"../../components/AuthContainer\";\r\nimport ForgotPasswordForm from \"./components/ForgotPasswordForm\";\r\n\r\nconst ForgotPassowrd = () => {\r\n    return (\r\n        <AuthContainer>\r\n            <ForgotPasswordForm></ForgotPasswordForm>\r\n        </AuthContainer>\r\n    )\r\n}\r\n\r\nexport default ForgotPassowrd;\r\n","import { useForm } from \"react-hook-form\";\r\nimport { useLoading } from \"../../../contexts/loaderContext\";\r\nimport authServices from \"../../../services/authServices\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ResetPasswordForm = () => {\r\n    const { handleSubmit, register, formState: { errors }, reset } = useForm();\r\n    const { setLoading } =  useLoading();\r\n    const onSubmit = data => {\r\n        setLoading(true);\r\n        authServices.forgotPassword(data)\r\n        .then((resp) => {\r\n            setLoading(false);\r\n            toast.success(resp.result.message);\r\n            reset();\r\n        })\r\n        .catch((error) => {\r\n            setLoading(false);\r\n            toast.error(error?.error?.message || 'Internal server error');\r\n        });\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col space-y-4 custom-box-shadow p-8 md:p-10 w-full md:w-3/4 lg:w-1/3 rounded-lg bg-white\">\r\n            <h2 className='text-xl'>Reset your password</h2>\r\n            <p className=\"text-gray-500\">Your account is verified, please enter your new password.</p>\r\n            <div className='flex flex-col'>\r\n                <label className='block mb-2' htmlFor=\"email\">New Password</label>\r\n                <input {...register('password', { required: 'Pasword is required' })} className='w-full border border-gray-300 rounded-lg' type=\"password\" name=\"password\" />\r\n                { errors.password && <span className='text-red-500 text-sm'>Email is Required</span>}\r\n            </div>\r\n            <div className='flex flex-col'>\r\n                <label className='block mb-2' htmlFor=\"email\">Confirm New Passowrd</label>\r\n                <input {...register('newPassword', { required: 'Password is required' })} className='w-full border border-gray-300 rounded-lg' type=\"password\" name=\"newPassword\" />\r\n                { errors.newPassword && <span className='text-red-500 text-sm'>Email is Required</span>}\r\n            </div>\r\n            <button type=\"submit\" className=\"w-full bg-green-500 hover:bg-green-600 text-white px-8 py-2 rounded-lg\">Reset Password</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ResetPasswordForm;\r\n","import AuthContainer from \"../../components/AuthContainer\";\r\nimport ResetPasswordForm from \"./components/ResetPasswordForm\";\r\n\r\nconst ResetPassword = () => {\r\n    return (\r\n        <AuthContainer><ResetPasswordForm></ResetPasswordForm></AuthContainer>\r\n    )\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React, { useEffect } from 'react';\nimport Register from './pages/signup/Register';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Login from './pages/login/Login';\nimport Home from './pages/home/Home';\nimport { LoadingProvider } from './contexts/loaderContext';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ForgotPassowrd from './pages/forgot_password/ForgotPassword';\nimport ResetPassword from './pages/reset_password/ResetPassword';\n\nconst App = () => {\n  return (\n    <div>\n      <LoadingProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/login\"><Login /></Route>\n          <Route path=\"/register\"><Register /></Route>\n          <Route path=\"/forgot-password\"><ForgotPassowrd /></Route>\n          <Route path=\"/reset-password/:userId\"><ResetPassword /></Route>\n          <Route path=\"/home\">\n            <Home/>\n          </Route>\n          <Route path=\"/\"><Login /></Route>\n        </Switch>\n      </Router>\n      </LoadingProvider>\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}