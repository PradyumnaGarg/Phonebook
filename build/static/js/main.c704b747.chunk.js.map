{"version":3,"sources":["services/httpServices.js","pages/signup/register.service.js","pages/signup/components/RegisterForm.jsx","pages/signup/Register.jsx","pages/login/login.service.js","contexts/loaderContext.js","pages/login/components/LoginForm.jsx","pages/login/Login.jsx","pages/home/home.service.js","pages/contacts/contact.service.js","pages/contacts/add-contact/AddContactForm.jsx","components/Sidebar.jsx","pages/contacts/my-contacts/Contact.jsx","components/Filter.js","pages/contacts/my-contacts/Contacts.jsx","pages/contacts/my-contacts/MyContacts.jsx","pages/dashboard/components/favourites/Favourite.jsx","pages/dashboard/dashboard.service.js","pages/dashboard/components/favourites/Favourites.jsx","pages/dashboard/components/frequency-graph/frequency-graph.jsx","pages/dashboard/Dashboard.jsx","pages/home/Home.jsx","App.js","index.js"],"names":["baseURL","process","trim","getAuthHeader","token","localStorage","getItem","Authorization","service","getRequest","path","axios","get","headers","then","data","postRequest","body","post","putRequest","put","deleteRequest","delete","status","registerService","registerUser","username","password","mobileNumber","firstName","lastName","httpServices","RegisterForm","useForm","register","handleSubmit","errors","formState","onSubmit","console","log","className","htmlFor","required","type","name","id","to","Register","loginService","loginUser","onLoginSucess","setItem","LoadingContext","createContext","loading","setLoading","LoadingProvider","children","useState","value","override","css","Provider","active","spinner","color","useLoading","context","useContext","Error","LoginForm","history","useHistory","setTimeout","result","push","catch","error","toast","response","Login","homeService","getAllContacts","httpService","saveNewContact","deleteContact","contactService","getContactInfo","updateContact","_id","AddContactForm","useParams","reset","show","message","setResponse","update","setUpdate","savedContact","addNewContact","useEffect","resp","number","hidden","Sidebar","url","useRouteMatch","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Contact","contact","makeFavourite","favourite","onClick","Filter","list","setList","filter","setFilter","placeholder","onChange","e","text","filteredList","item","toLowerCase","includes","filterList","target","label","key","Contacts","contactsToShow","contacts","setContacts","map","Swal","require","MyContacts","a","fire","icon","title","showCancelButton","confirmButtonText","confirmButtonColor","isConfirmed","contactList","Favourite","fillRule","clipRule","dashboardService","getFavouriteContacts","getGraphData","Favourities","favourites","setFavourites","length","style","flex","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","FrequencyGraph","datasets","setDatasets","labels","setLabels","payload","startDate","moment","subtract","format","stopDate","el","count","borderColor","backgroundColor","options","responsive","scales","y","ticks","stepSize","beginAtZero","grid","display","x","Dashboard","Home","exact","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c704b747.chunk.js","sourcesContent":["import axios from 'axios';\r\nlet baseURL = '/api'\r\n\r\nconst { REACT_APP_ENVTYPE } = process.env;\r\n\r\nif (REACT_APP_ENVTYPE.trim() === 'dev') {\r\n    baseURL = 'http://localhost:2000/api'\r\n}\r\n\r\nconst getAuthHeader = () => {\r\n    const token = localStorage.getItem('phonebook_token') || null;\r\n    return { Authorization: `Bearer ${token}` };\r\n}\r\n\r\nconst getRequest = (path) => {\r\n    const request = axios.get(`${baseURL}${path}`, { headers: getAuthHeader() });\r\n    return request.then(({data}) => data);\r\n}\r\n\r\nconst postRequest = (path, body) => {\r\n    const request  = axios.post(`${baseURL}${path}`, body, { headers: getAuthHeader() });\r\n    return request.then(({data}) => data);\r\n}\r\n\r\nconst putRequest = (path, body) => {\r\n    const request = axios.put(`${baseURL}${path}`, body, { headers: getAuthHeader() });\r\n    return request.then(({data}) => data);\r\n}\r\n\r\nconst deleteRequest = (path) => {\r\n    const request = axios.delete(`${baseURL}${path}`, { headers: getAuthHeader() });\r\n    return request.then(({status}) => status);\r\n}\r\n\r\nconst service = { getRequest, postRequest, putRequest, deleteRequest }\r\n\r\nexport default service;","import httpServices from '../../services/httpServices';\r\n\r\nconst registerUser = ({username, password, mobileNumber, firstName, lastName}) => {\r\n    return httpServices.postRequest('/users/register', {username, password, mobileNumber, firstName, lastName});\r\n}\r\n\r\nconst registerService = { registerUser };\r\n\r\nexport default registerService;\r\n","import registerService from '../register.service';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RegisterForm = () => {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const onSubmit = data => {\r\n        console.log(data);\r\n        registerService.registerUser(data)\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className='flex flex-col space-y-4 custom-box-shadow p-10 w-full md:w-3/4 lg:w-1/3 rounded-lg bg-white'>\r\n            <h2 className='text-xl'>Register to phonebook</h2>\r\n            <div className='flex'>\r\n                <div className='w-1/2 mr-2'>\r\n                    <label className='block mb-2' htmlFor=\"firstName\">Firstname</label>\r\n                    <input {...register('firstName', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"text\" />\r\n                    { errors.firstName && <span className=\"text-red-500 text-sm\">First name is required</span> }\r\n                </div>\r\n                <div className='w-1/2'>\r\n                    <label className='block mb-2' htmlFor=\"lastName\">Lastname</label>\r\n                    <input {...register('lastName', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"text\" />\r\n                    { errors.lastName && <span className=\"text-red-500 text-sm\">Last Name is required</span> }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label className='block mb-2' htmlFor=\"email\">Email</label>\r\n                <input {...register('username', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"email\" />\r\n                { errors.username && <span className=\"text-red-500 text-sm\">Email is required</span> }\r\n            </div>\r\n            <div>\r\n                <label className='block mb-2' htmlFor=\"mobileNumber\">Mobile Number</label>\r\n                <input {...register('mobileNumber', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"number\" name=\"mobileNumber\" id=\"mobileNumber\" />\r\n                { errors.mobileNumber && <span className=\"text-red-500 text-sm\">Mobile Number is required</span> }\r\n            </div>\r\n            <div>\r\n                <label className='block mb-2' htmlFor=\"password\">Password</label>\r\n                <input {...register('password', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"password\" name=\"password\" id=\"password\" />\r\n                { errors.password && <span className=\"text-red-500 text-sm\">Password is required</span> }\r\n            </div>\r\n            <button type='submit' className='w-full bg-green-500 hover:bg-green-600 text-white px-8 py-2 rounded-lg'>Register</button>\r\n            <p>Already have an account? <Link className='text-green-500 hover:text-green-600 underline' to='/login'>Login</Link></p>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;\r\n","\r\nimport RegisterForm from \"./components/RegisterForm\";\r\n\r\nconst Register = () => {\r\n    return (\r\n        <div className='flex h-screen'>\r\n            <div className='flex items-center justify-center p-5 custom-bg w-full'>\r\n                <RegisterForm></RegisterForm>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n","import httpServices from '../../services/httpServices';\r\n\r\nconst loginUser = ({username, password}) => {\r\n    return httpServices.postRequest('/users/login', {username, password});\r\n}\r\n\r\nconst onLoginSucess = (token) => {\r\n    localStorage.setItem('phonebook_token', token);\r\n}\r\n\r\nconst loginService = { loginUser, onLoginSucess };\r\n\r\nexport default loginService;\r\n","import { createContext, useState, useContext, useEffect } from 'react';\r\nimport {ScaleLoader, BarLoader, PuffLoader} from 'react-spinners';\r\nimport Loader from \"react-loader-spinner\";\r\nimport { css } from \"@emotion/react\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\n\r\nconst LoadingContext = createContext({\r\n    loading: false,\r\n    setLoading: null\r\n});\r\n\r\nexport function LoadingProvider({children}) {\r\n    const [loading, setLoading] = useState(false);\r\n    const value = { loading, setLoading };\r\n    const override = css`\r\n    display: block;\r\n    margin: auto;\r\n    border-color: red;\r\n    `;\r\n    return <LoadingContext.Provider value={value}>\r\n            <LoadingOverlay active={loading} spinner={<PuffLoader css={override} color={'#28ffb8'} />}>\r\n                    {children}\r\n            </LoadingOverlay>\r\n           </LoadingContext.Provider>\r\n}\r\n\r\n\r\nexport function useLoading() {\r\n    const context = useContext(LoadingContext);\r\n    if (!context) {\r\n        throw new Error('useLoading must be used with Loading Provider');\r\n    }\r\n    return context;\r\n}\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport loginService from \"../login.service\";\r\nimport { useLoading } from '../../../contexts/loaderContext';\r\nimport { toast } from \"react-toastify\";\r\nconst LoginForm = () => {\r\n    const history = useHistory();\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const { setLoading } =  useLoading();\r\n    const onSubmit = data => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            loginService.loginUser(data)\r\n            .then(({result: {token}}) => {\r\n                setLoading(false);\r\n                token && loginService.onLoginSucess(token);\r\n                history.push('/home');\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                toast.error(error?.response?.data?.error || \"Something went wrong\")\r\n            });\r\n        }, 3000)\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className='flex flex-col space-y-4 custom-box-shadow p-8 md:p-10 w-full md:w-3/4 lg:w-1/3 rounded-lg bg-white'>\r\n            <h2 className='text-xl'>Login to phonebook</h2>\r\n            <div className='flex flex-col'>\r\n                <label className='block mb-2' htmlFor=\"email\">Email</label>\r\n                <input {...register('username', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"email\" name=\"username\" />\r\n                { errors.username && <span className='text-red-500 text-sm'>Email is Required</span>}\r\n            </div>\r\n            <div>\r\n                <label className='block mb-2' htmlFor=\"password\">Password</label>\r\n                <input {...register('password', { required: true })} className='w-full border border-gray-300 rounded-lg' type=\"password\" name=\"password\" id=\"password\" />\r\n                { errors.password && <span className='text-red-500 text-sm'>Password is Required</span>}\r\n            </div>\r\n            <button type='submit' className='w-full bg-green-500 hover:bg-green-600 text-white px-8 py-2 rounded-lg'>Login</button>\r\n            <p>Already have an account? <Link className='text-green-500 hover:text-green-600 underline' to='/register'>Register</Link></p>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;\r\n","import LoginForm from \"./components/LoginForm\";\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className='flex h-screen'>\r\n            <div className='flex items-center justify-center p-5 custom-bg w-full'>\r\n                <LoginForm></LoginForm>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import httpService from '../../services/httpServices';\r\n\r\nconst getAllContacts = () => {\r\n    return httpService.getRequest('/contacts');\r\n}\r\n\r\nconst saveNewContact = (data) => {\r\n    return httpService.postRequest('/contacts', data);\r\n}\r\n\r\nconst deleteContact = (id) => {\r\n    return httpService.deleteRequest(`/contacts/${id}`);\r\n}\r\n\r\nconst homeService = {\r\n    getAllContacts,\r\n    saveNewContact,\r\n    deleteContact\r\n}\r\n\r\nexport default homeService;\r\n","import httpService from '../../services/httpServices';\r\n\r\nconst getContactInfo = (id) => {\r\n    return httpService.getRequest(`/contacts/${id}`);\r\n}\r\n\r\nconst updateContact = (data) => {\r\n    return httpService.putRequest(`/contacts/${data._id}`, data);\r\n}\r\n\r\nconst contactService = {\r\n    getContactInfo,\r\n    updateContact,\r\n}\r\n\r\nexport default contactService;","import { useForm } from \"react-hook-form\";\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport homeService from \"../../home/home.service\";\r\nimport contactService from \"../contact.service\";\r\n\r\nconst AddContactForm = () => {\r\n    let { id } = useParams();\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm();\r\n    const [ response, setResponse ] = useState({show: false, error: false, message: ''});\r\n    const [ update, setUpdate ] = useState(false);\r\n    const onSubmit = (data) => {\r\n      if (update) {\r\n        updateContact(data);\r\n      } else {\r\n        addNewContact(data);\r\n      }\r\n    };\r\n\r\n    const updateContact = (data) => {\r\n      contactService.updateContact({...data, _id: id})\r\n      .then(savedContact => {\r\n        console.log(savedContact);\r\n        setResponse({show: true, error: false, message: 'Contact Updated Successfully'});\r\n        setTimeout(() => setResponse({show: false, error: false, message: ''}), 2000)\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data.error);\r\n        setResponse({show: false, error: true, message: error?.response?.data?.error || 'Error'});\r\n        setTimeout(() => setResponse({show: false, error: false, message: ''}), 2000)\r\n      });\r\n    };\r\n\r\n    const addNewContact = (data) => {\r\n      homeService.saveNewContact(data)\r\n        .then(savedContact => {\r\n            console.log(savedContact);\r\n            setResponse({show: true, error: false, message: 'Contact Added Successfully'});\r\n            setTimeout(() => setResponse({show: false, error: false, message: ''}), 2000)\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response.data.error);\r\n            setResponse({show: false, error: true, message: error?.response?.data?.error || 'Error'});\r\n            setTimeout(() => setResponse({show: false, error: false, message: ''}), 2000)\r\n        });\r\n    }\r\n\r\n    const loadContactInfo = () => {\r\n      if (id) {\r\n        contactService.getContactInfo(id)\r\n        .then((resp) => {\r\n          setUpdate(true);\r\n          reset({\r\n            name: resp.result.name,\r\n            number: resp.result.number\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        })\r\n      }\r\n    }\r\n\r\n    useEffect(loadContactInfo, [id, reset]);\r\n\r\n    return (\r\n      <div className='w-1/2 p-4'>\r\n        <div className='custom-box-shadow p-5 rounded-lg'>\r\n\r\n        <form className='flex flex-col space-y-4' onSubmit={handleSubmit(onSubmit)}>\r\n          <h2 className='text-lg font-medium'>{ update ? 'Update' : 'Add new' } contact</h2>\r\n          <p className='text-red-500' hidden={!response.error}>Error: {response.message}</p>\r\n          <p className='text-green-500' hidden={!response.show}>{response.message}</p>\r\n          <div>\r\n            <label htmlFor='name' className='block mb-2'>Name</label>\r\n            <input\r\n              id=\"name\"\r\n              className='w-full border border-gray-300 rounded-lg'\r\n              type='text'\r\n              {...register('name', { required: true })} />\r\n              { errors.name && <span className='text-red-500 mt-1'>Name is required</span> }\r\n          </div>\r\n          <div>\r\n            <label htmlFor='number' className='block mb-2'>Contact number</label>\r\n            <input \r\n              id=\"number\"\r\n              className='w-full border border-gray-300 rounded-lg'\r\n              type='number'\r\n              {...register('number', { required: true })} />\r\n              { errors.name && <span className='text-red-500 mt-1'>Name is required</span> }\r\n          </div>\r\n          <button className='bg-green-500 hover:bg-green-600 text-white px-8 py-2 rounded-lg' type='submit'>{ update ? 'Update' : 'Add'}</button>\r\n        </form>\r\n      </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default AddContactForm;\r\n","import { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    let { url } = useRouteMatch();\r\n    return (\r\n        <div className='min-h-screen w-full bg-green-600 text-white rounded-r-2xl'>\r\n            <Link to='/home/dashboard'><p className='text-3xl p-4 mb-4'>phonebook</p></Link>\r\n            <Link to='/home/dashboard'>\r\n                <div className='text-lg pb-6 pl-4 pr-8 flex items-center'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\r\n                    </svg>\r\n                    <span>Dashboard</span>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-auto h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                    </svg>\r\n                </div>\r\n            </Link>\r\n            <Link to={`${url}/my-contacts`} >\r\n                <div className='text-lg pb-6 pl-4 pr-8 flex items-center'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                    </svg>\r\n                    <span>My Contacts</span>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-auto h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                    </svg>\r\n                </div>\r\n            </Link>\r\n            <Link to={`${url}/my-profile`} >\r\n                <div className='text-lg pl-4 pr-8 flex items-center'>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                    </svg>\r\n                    <span>My Profile</span>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-auto h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\r\n                    </svg>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Contact = ({ contact, deleteContact, makeFavourite }) => {\r\n    return (\r\n        <div className='border border-gray-300 rounded-lg px-4 py-2 flex items-center'>\r\n            <div className='mr-4 flex flex-col'>\r\n                <p className='text-medium'>{contact.name} </p>\r\n                <p className=''>{contact.number}</p>\r\n            </div>\r\n            <button className='px-8 py-2 ml-auto mr-2 border rounded-lg inline-flex'>\r\n                {\r\n                    contact.favourite\r\n                        ? (\r\n                            <span className='inline-flex' onClick={() => makeFavourite(contact._id, false)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-yellow-300\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                                    <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                                </svg>\r\n                            </span>)\r\n                        : (\r\n                            <span className='inline-flex' onClick={() => makeFavourite(contact._id, true)}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-yellow-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\r\n                        </svg>\r\n                            </span>\r\n                        )\r\n                }\r\n            </button>\r\n            <Link to={`/home/edit-contact/${contact._id}`} className='border rounded-lg px-8 py-2 mr-2'>Edit</Link>\r\n            <button className='px-8 py-2 rounded-lg bg-red-500 hover:bg-red-600 text-white' onClick={() => { deleteContact(contact) }}>Delete</button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Contact;\r\n","import { useState } from \"react\";\r\n\r\nconst Filter = ({list, setList}) => {\r\n  const [filter, setFilter] = useState('');\r\n  const filterList = (text) => {\r\n    setFilter(text);\r\n    const filteredList = text ? list.filter((item) => item.name.toLowerCase().includes(filter.toLowerCase())) : list;\r\n    console.log(filteredList)\r\n    setList(filteredList);\r\n  }\r\n    return (\r\n        <input \r\n          id='filter-name'\r\n          className='border-gray-300 border rounded-lg p-2 w-full'\r\n          placeholder='Search as you type'\r\n          type='text'\r\n          value = {filter}\r\n          onChange = {(e) => filterList(e.target.value)}  />\r\n    )\r\n}\r\n\r\nexport default Filter;","import Contact from \"./Contact\";\r\nimport Filter from '../../../components/Filter';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst headers = [\r\n  { label: \"Name\", key: \"name\" },\r\n  { label: \"Number\", key: \"number\" }\r\n];\r\n\r\nconst Contacts = ({contactsToShow, deleteContact, makeFavourite}) => {\r\n    const [contacts, setContacts] = useState([]);\r\n    useEffect(() => {\r\n      setContacts([...contactsToShow]);\r\n    }, [contactsToShow])\r\n    return (\r\n      <div className='w-full custom-box-shadow rounded-lg p-5 space-y-4'>\r\n        <div className='flex items-center'>\r\n          <h2 className='text-lg font-semibold'>Contacts</h2>\r\n          <CSVLink data={contacts} className=\"bg-green-500 text-white px-8 py-2 rounded-lg ml-auto mr-2\" headers={headers}>Export CSV</CSVLink>\r\n          <Link to='/home/add-new-contact' className='bg-green-500 hover:bg-green-600 text-white px-8 py-2 rounded-lg'>Add New Contact</Link>\r\n        </div>\r\n        <Filter list={contactsToShow} setList = {setContacts} />\r\n        { \r\n          contacts.map((contact) => (\r\n            <Contact key = { contact._id } contact = { contact } deleteContact = { deleteContact } makeFavourite = { makeFavourite } />\r\n          ))\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import Contacts from \"./Contacts\"\r\nimport { useEffect, useState } from \"react\";\r\nimport homeService from \"../../home/home.service\";\r\nimport contactService from \"../contact.service\";\r\nimport { useLoading } from '../../../contexts/loaderContext'\r\nconst Swal = require('sweetalert2')\r\n\r\nconst MyContacts = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const { setLoading } = useLoading();\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    homeService.getAllContacts()\r\n    .then(({ result }) => { setLoading(false); setContacts([...result]) })\r\n    .catch((error) => {\r\n        console.log(error.response.data.error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const deleteContact = async (contact) => {\r\n    const deleteConfirm = await Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Delete Contact',\r\n      text: 'Are you sure?',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Delete',\r\n      confirmButtonColor: '#ef4444'\r\n    });\r\n    if (deleteConfirm.isConfirmed) {\r\n      try {\r\n        setLoading(true);\r\n        const status = await homeService.deleteContact(contact._id);\r\n        setLoading(false);\r\n        if (status) {\r\n          const contactList = contacts.filter(({ _id }) => _id !== contact._id);\r\n          setContacts([...contactList]);\r\n        }\r\n      } catch (error) {\r\n        setLoading(false);\r\n        console.log(error.response.data.error); \r\n      }\r\n    }\r\n  };\r\n  \r\n  const makeFavourite = (id, favourite) => {\r\n    setLoading(true)\r\n    console.log(favourite);\r\n    contactService.updateContact({ _id: id, favourite })\r\n    .then(() => {\r\n        setLoading(false)\r\n        const contactList = contacts.map((contact) => {\r\n          if (contact._id === id) {\r\n            return { ...contact, favourite };\r\n          }\r\n          return contact;\r\n        });\r\n        setContacts([...contactList]);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false)\r\n      })\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n      <Contacts contactsToShow={contacts} deleteContact={deleteContact} makeFavourite={makeFavourite}></Contacts>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MyContacts;\r\n","const Favourite = ({favourite}) => {\r\n    console.log(favourite);\r\n    return (\r\n        <>\r\n            <div className='p-3 flex bg-white rounded-2xl text-black'>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-10 w-10 text-green-600 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n                <div className='flex flex-col'>\r\n                    <div>{favourite.name}</div>\r\n                    <div>{favourite.number}</div>\r\n                    <div>View</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Favourite;","import httpService from '../../services/httpServices';\r\n\r\nconst getFavouriteContacts = (id) => {\r\n    return httpService.getRequest(`/contacts/favourites`);\r\n}\r\n\r\nconst getGraphData = (data) => {\r\n    return httpService.postRequest('/contacts/graphData', data);\r\n}\r\n\r\nconst dashboardService = {\r\n    getFavouriteContacts,\r\n    getGraphData,\r\n}\r\n\r\nexport default dashboardService;","import { useEffect, useState } from \"react\";\r\nimport Favourite from \"./Favourite\";\r\nimport dashboardService from \"../../dashboard.service\";\r\nimport { useLoading } from '../../../../contexts/loaderContext';\r\n\r\nconst Favourities = () => {\r\n    const [favourites, setFavourites] = useState([]);\r\n    const { setLoading } = useLoading();\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        dashboardService.getFavouriteContacts()\r\n        .then((resp) => {\r\n            setLoading(false)\r\n            console.log(resp.result);\r\n            setFavourites([...resp.result]);\r\n        })\r\n        .catch((error) => {\r\n            setLoading(false)\r\n            console.log(error);\r\n        });\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className='p-8 rounded-2xl bg-green-200 bg-opacity-90 shadow-xl'>\r\n                <div className='flex mb-3'>\r\n                    <span className='text-lg'>Favourite Contacts</span>\r\n                    {\r\n                        favourites.length > 0\r\n                        ? (<span className='text-lg ml-auto'>{favourites.length} { favourites.length === 1 ? 'Contact' : 'Contacts' }</span>)\r\n                        : ''\r\n                    }\r\n                </div>\r\n                <div className='flex flex-wrap -m-4'>\r\n                    {\r\n                        favourites.length > 0 \r\n                        ? favourites.map((favourite) => (\r\n                            <div className='m-4' style={{ flex: '0 0 45%' }} key={favourite._id}>\r\n                                <Favourite favourite = { favourite } />\r\n                            </div>\r\n                          ))\r\n                        : (\r\n                            <span className='m-4'>No Favourites yet!</span>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Favourities;","import { useState, useEffect } from 'react';\r\nimport dashboardService from '../../dashboard.service';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n  } from \"chart.js\";\r\nimport moment from 'moment';\r\n\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n  );\r\n\r\nconst FrequencyGraph = () => {\r\n    const [datasets, setDatasets] = useState([]);\r\n    const [labels, setLabels] = useState([]);\r\n    const payload = {\r\n        startDate: moment().subtract(7, 'days').format('YYYY-MM-DD'),\r\n        stopDate: moment().format('YYYY-MM-DD'),\r\n    }\r\n    useEffect(() => {\r\n        dashboardService.getGraphData(payload)\r\n        .then((resp) => {\r\n            setLabels(resp?.result?.map(el => el._id));\r\n            setDatasets([{data: resp?.result?.map(el => el.count), borderColor: 'rgb(0, 0, 0)',}]);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }, [])\r\n\r\n    const data = {\r\n        labels,\r\n        datasets,\r\n        borderColor: 'rgb(53, 162, 235)',\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)'\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        scales: {\r\n            y: {\r\n                ticks: {\r\n                  color: \"black\",\r\n                  stepSize: 1,\r\n                  beginAtZero: true,\r\n                },\r\n                grid: {\r\n                    color: 'black'\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'No. of contacts',\r\n                    color: 'black'\r\n                  }\r\n            },\r\n            x: {\r\n                ticks: {\r\n                  color: \"black\",\r\n                  stepSize: 1,\r\n                  beginAtZero: true\r\n                },\r\n                grid: {\r\n                    color: 'black'\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: 'Dates',\r\n                    color: 'black'\r\n                  }\r\n            },\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className='p-8 rounded-2xl bg-green-200 bg-opacity-90 my-4 shadow-xl'>\r\n                <h2 className='text-lg mb-4'>Frequency Graph</h2>\r\n                <Line options={options} data={data} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FrequencyGraph;\r\n","import Favourities from \"./components/favourites/Favourites\";\r\nimport FrequencyGraph from \"./components/frequency-graph/frequency-graph\";\r\n\r\nconst Dashboard = () => {\r\n    return (\r\n        <>\r\n            <div className='flex p-4'>\r\n                <div className='w-2/3'>\r\n                    <Favourities/>\r\n                    <FrequencyGraph />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","import AddContactForm from '../contacts/add-contact/AddContactForm';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { Route, useRouteMatch } from 'react-router-dom';\r\nimport MyContacts from '../contacts/my-contacts/MyContacts';\r\nimport Dashboard from '../dashboard/Dashboard';\r\n\r\nconst Home = () => {\r\n  let { path } = useRouteMatch();\r\n  return (\r\n    <div>\r\n      <div className='flex'>\r\n        <div className='w-1/5'>\r\n          <Sidebar />\r\n        </div>\r\n        <div className='w-4/5 flex-1 max-h-screen overflow-y-auto '>\r\n            <Route exact path={`${path}`}><Dashboard /></Route>\r\n            <Route exact path={`${path}/dashboard`}><Dashboard /></Route>\r\n            <Route exact path={`${path}/my-contacts`}><MyContacts /></Route>\r\n            <Route exact path={`${path}/add-new-contact`}><AddContactForm /></Route>\r\n            <Route exact path={`${path}/edit-contact/:id`}><AddContactForm /></Route>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect } from 'react';\nimport Register from './pages/signup/Register';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Login from './pages/login/Login';\nimport Home from './pages/home/Home';\nimport { LoadingProvider } from './contexts/loaderContext';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst App = () => {\n  return (\n    <div>\n      <LoadingProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/login\"><Login /></Route>\n          <Route path=\"/register\"><Register /></Route>\n          <Route path=\"/home\">\n            <Home/>\n          </Route>\n          <Route path=\"/\"><Login /></Route>\n        </Switch>\n      </Router>\n      </LoadingProvider>\n      <ToastContainer />\n    </div>\n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}